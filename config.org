#+TITLE: Doom Emacs Konfiguration
#+AUTHOR: Stefan Schuh
#+STARTUP: content

* Allgemein
** Header :noexport:
#+begin_src emacs-lisp
;;; config.el -*- lexical-binding: t; -*-
#+end_src
** Userinfo
#+begin_src elisp
;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets.
(setq user-full-name "Stefan Schuh"
      user-mail-address "stefan@schuhu.at")
#+end_src

** UI
*** Theme
#+begin_src elisp
(setq doom-theme 'doom-monokai-classic)
#+end_src
*** Window selection
In =init.el= habe ich =(window-select +numbers)= aktiviert. Window selection geht nun über =SPC w {n}=, wobei =n= die Nummer des Fensters ist.

**** Ace Window
Als erstes brauchen wir =other-window= auf einer gut erreichbaren Stelle. =SPC w p= ist derzeit mit =evil-window-mru= belegt, einer Funktion, die ich noch nie verwendet habe. Weg damit, sie hat eh noch ein zweites Binding (=SPC w C-p=).

#+begin_src elisp
(map! :leader
      :desc "window switcher" "w p" #'other-window)
#+end_src

Macht die Hints von =ace-window= größer und bunter. Viel besser zu sehen. Das Snippet ist direkt aus der Dokumentation des Moduls =window-select=: https://github.com/hlissner/doom-emacs/tree/develop/modules/ui/window-select

#+begin_src elisp
(custom-set-faces!
  '(aw-leading-char-face
    :foreground "black" :background "#F92660"
    :weight bold :height 2.5 :box (:line-width 10 :color "#F92660")))
#+end_src
***** TODO aw-leading-char-face automatisch an Theme anpassen
** Completion
Ich verwende das =vertico=-Modul.
*** Embark
Darin enthalten ist auch =embark=. =embark-act= hat standardmäßig zwei Bindings: =LDR a= und =C-;=. Ersteres ist gut, zweiteres schlecht, weil das Semikolon auf der deutschen Tastatur auf der Umschalt-Ebene liegt. Daher:

#+NAME: remap-embark-act
#+begin_src elisp
(map! "C-ö"             #'embark-act
      (:map minibuffer-local-map
       "C-ö"            #'embark-act
       "C-c C-ö"        #'embark-export))
#+end_src

** Keybindings allgemein
*** Vim Stuff
**** Leader, localleader, ex
Die Umlaute liegen auf meiner Tastatur (xoy) ganz gut, aber für den Doppelpunkt brauche ich die Umschalttaste. Daher scheint es mir eine gute Idee zu sein, wichtige Funktionen, die auf einer englischen Tastatur gut liegen, hierher zu binden.

Bisher hatte ich das Komme als localleader. Allerdings kollidiert das mit einem Vim-Befehl, den ich mir vielleicht angewöhnen möchte. Das "ü" ist genauso bequem zu erreichen wie der Beistrich und hat naheliegenderweise keine Kollisionen:
#+begin_src elisp
(setq doom-localleader-key "ü")
#+end_src

Außerdem möchte ich das "ä" für =evil-ex=, weil, wie gesagt, der Doppelpunkt auf meinen Tastatur weit schlechter zu erreichen ist.
#+begin_src elisp
(map! :map global-map
      :desc "ex"
      :nv "ä" #'evil-ex)
#+end_src

Außerdem komme ich von Spacemacs, daher möchte ich =M-x= auf =SPC SPC= haben
#+begin_src elisp
(map! :leader
      :desc "M-x" "SPC" #'execute-extended-command)
#+end_src

* Sprachen
** LSP allgemein
In =init.el= habe ich ~lsp~ aktiviert. Bei den entsprechenden Sprachen ist dementsprechend auch das Flag ~lsp~ zu setzen.
** Common Lisp
:PROPERTIES:
:LAST_EDIT: 2021-01-10
:END:
Weil ich das Buch "Land of Lisp" durcharbeite, habe ich in =init.el= auch das entsprechende Modul (~common-lisp~) aktiviert.

Das Buch geht davon aus, dass ich =CLISP= als Interpreter verwende, nicht wie vom Modul vorgesehen =SBCL=. Kein Problem:

#+begin_src elisp
(setq inferior-lisp-program "clisp")
#+end_src


** org-mode
*** Allgemein
Der Ordner, in dem meine org-files wohnen und wo die Attachments hingehen:
#+begin_src elisp
(setq org-directory "~/Nextcloud/org")
#+end_src
**** org-attach
#+begin_src elisp
(setq org-attach-id-dir "~/Nextcloud/org/attach")
#+end_src
*** Keybindings
=C-c C-c= auf =localleader localleader=. In meiner derzeitigen Konfiguration heißt das =ü ü=.
#+begin_src elisp
(map! :after org
      :map org-mode-map
      :localleader
      doom-localleader-key #'org-ctrl-c-ctrl-c)
#+end_src
*** org-roam
:PROPERTIES:
:LAST_EDIT: 2021-01-14
:END:
Mir gefällt die Idee, den Luhmannschen Zettelkasten in =org-mode= zu implementieren, also probiere ich das mal aus. Dazu muss in =init.el= bei ~org~ das Flag ~+roam2~ gesetzt sein.

Dokumentation zu =org-roam= gibt es unter https://www.orgroam.com/manual.html, bzw. direkt im Emacs-Info-System (=SPC h i=).

Zuerst muss =org-roam= wissen, wo die Dateien sind:
#+begin_src elisp
(setq org-roam-directory "~/Nextcloud/org/org-roam/")
#+end_src


**** org-roam-bibtex
https://github.com/org-roam/org-roam-bibtex
Für integration mit =citar= etc.

Zuerst muss einmal das Paket geladen werden, etc. Dazu muss folgendes in =packages.el=:

#+name: org-roam-bibtex-packages
#+begin_src elisp :tangle no
(package! org-roam-bibtex
  :recipe (:host github :repo "org-roam/org-roam-bibtex"))

;; When using org-roam via the `+roam` flag
(unpin! org-roam)

;; When using bibtex-completion via the `biblio` module
(unpin! bibtex-completion helm-bibtex ivy-bibtex)
#+end_src

Und dann noch die Minimalkonfiguration:

#+name: org-roam-bibtex
#+begin_src elisp
(use-package! org-roam-bibtex
  :after org-roam)
#+end_src

** python
*** LSP
=pyright= benötigt [[file:~/projects/system-config/config.org::*node][node]] > 12.
*** Formatter
=pyright= stelt als LSP-server keine Formatierungsfunktion zur Verfügung. Daher muss als Backend für das ~format~ Modul =black= installiert sein:

#+begin_src bash :tangle no
sudo pip3 install black
#+end_src
** web
*** LSP
Hier verwende ich derzeit =html-ls=. Formatieren geht über diesen Server nicht, daher muss das Modul ~format~ aktiviert und =tidy= installiert sein:

#+begin_src bash :tangle no
sudo apt install tidy
#+end_src
*** tidy
Die Einrückungen in der Standardeinsteillung nicht wirklich (alles unter ~<body>~ ist auf einer Ebene).

#+NAME: html-tidy
#+begin_src elisp
(set-formatter! 'html-tidy "tidy -q -indent --indent-spaces 2" :modes '(html-mode web-mode))
#+end_src

** XML
*** LSP
Von ~(web +lsp)~ wird auch in ~nXML-mode~ LSP kofiguriert und beim ersten Start der xmlls installiert.
* app
** E-Mail
:PROPERTIES:
:ID:       801f7b26-1410-47be-8521-dc30087364b4
:END:
Ich benutze =mu4e= für meine Mails. Die Synchronisierung der Mails läuft über =mbsync=, gesendet werden die mails mit =msmtp=.

- Doku zum Doom-Modul :: [[file:~/doom-emacs/modules/email/mu4e/README.org::+TITLE: email/mu4e][email/mu4e/README.org]]
*** Main view
**** Shortcuts zu den wichtigsten Ordnern
#+NAME: mu4e-maildir-shortcuts
#+begin_src elisp :tangle no
(setq mu4e-maildir-shortcuts
        '(("/uni/INBOX" . ?i)
          ("/schuhu/INBOX" . ?s)
          ("/gmail/INBOX" . ?g)
          ))

#+end_src
**** Bullets
Mir gefallen die bullets im main view noch weniger als die ursprünglichen Sternchen. Außerdem stehen im Bereich "Basics" immer noch die Sternchen. Also machen wir wieder Sternchen, damit es konsistent ist.
#+NAME: bullets
#+begin_src elisp :tangle no
(setq +mu4e-main-bullet "*")
#+end_src

***** TODO herausfinden, warum ~+mu4e-main-bullet~ im Bereich "Basics" nicht verwendet wird
Sobald ich das weiß, kann ich mich um ein anderes Symbol kümmern. So ist es inkonsistent und das ist (für mich) schlimmer als hässlich.


*** Allgemeine Konfiguration
#+NAME: mail-general
#+begin_src elisp :tangle no
(setq
 mu4e-confirm-quit nil ; quit without asking
 mu4e-use-fancy-chars nil ; don't use icons, they mess up the linespacing
 mu4e-attachment-dir "~/Downloads"
 mu4e-maildir (expand-file-name "~/Maildir")
 mu4e-get-mail-command "mbsync schuhu uni gmail"
 mu4e-update-interval 180 ;; check for mail every 3 minutes
 sendmail-program (executable-find "msmtp")
 send-mail-function #'smtpmail-send-it
 message-sendmail-f-is-evil t
 message-sendmail-extra-arguments '("--read-envelope-from")
 message-send-mail-function #'message-send-mail-with-sendmail)
#+end_src

In der ursprünglichen Einstellung hat das Datum im header-view keinen Platz.
#+NAME: headers-fields
#+begin_src elisp :tangle no
(setq mu4e-headers-fields
        '((:account-stripe . 1)
          (:human-date . 10)
          (:flags . 6) ; 3 icon flags
          (:from-or-to . 25)
          (:subject)))
#+end_src
*** Konten einrichten
#+NAME: mail-accounts
#+begin_src elisp :tangle no
    (set-email-account! "schuhu"
                        '((mu4e-sent-folder . "/schuhu/Gesendet")
                          (mu4e-drafts-folder . "/schuhu/Drafts")
                          (mu4e-trash-folder . "/schuhu/Papierkorb")
                          (mu4e-refile-folder . "/schuhu/Archiv")
                          (user-mail-address . "stefan@schuhu.at")
                          (user-full-name . "Stefan Schuh")
                          (mu4e-compose-signature . (concat
                                               "Stefan Schuh\n"
                                               "Maria-Pachleitner-Straße 51/10\n"
                                               "8053 Graz"))))

    (set-email-account! "uni"
                        '(( user-mail-address	     . "stefan.schuh@uni-graz.at" )
                        ( user-full-name	     . "Stefan Schuh" )
                        ( mu4e-compose-signature  .   (concat
                                                        "Mag. Stefan Schuh (B.A.)   https://ub.uni-graz.at/\n"
                                                        "mailto:stefan.schuh@uni-graz.at fon:+43-316-380-1461\n"
                                                        "Universitätsbibliothek Graz, Medienbearbeitung:\n"
                                                        "Universitätsplatz 3a, 8010 Graz"))
                        ;; special folders
                        (mu4e-drafts-folder . "/uni/drafts")
                        (mu4e-sent-folder . "/uni/sent")
                        (mu4e-trash-folder . "/uni/trash")
                        (mu4e-refile-folder . "/uni/Archiv")))
    (set-email-account! "gmail"
                        '((user-mail-address . "stefan.schuh.ba@gmail.com")
                          (user-full-name . "Stefan Schuh")
                          (mu4e-drafts-folder . "/gmail/drafts")
                          (mu4e-sent-folder . "/gmail/sent")
                          (mu4e-trash-folder ."/gmail/trash")
                          ))
#+end_src

*** Kontexte
Hier muss in Doom Emacs offenbar nicht so viel gemacht werden. Durch das einrichten der Accounts mit dem Makro ~set-email-account!~ funktioniert das Umschalten der Kontexte ohne weitere Konfiguration bisher völlig zu meiner Zufriedenheit.

*** Mail senden
:PROPERTIES:
:ID:       9dc6ef65-8349-4f76-81ad-cc38b1766a2c
:END:
Wie im Block [[mail-general][mail-general]] zu sehen ist, ist werden die Mails über =msmtp= gesendet. Die Konfiguration ist hier: *INSERT LINK*
**** TODO Link zum =config.org=, sobald diese einen endgültigen Platz hat.

*** Alles zusammensetzen :noexport:
Hier die Mail-Konfiguration als ganzes:
#+NAME: mail
#+begin_src elisp :noweb yes
(after! mu4e
   ;; load package to be able to capture emails for GTD
   (require 'org-mu4e)
   <<mu4e-maildir-shortcuts>>
   <<bullets>>
   <<mail-general>>
   <<mail-accounts>>
   <<headers-fields>>
   )
#+end_src
* tools
** biblio
In =init.el= habe ich ~biblio~ aktiviert. Hier nun die entsprechende Konfiguration:

#+NAME: citar-paths
#+begin_src elisp
(setq! citar-bibliography '("~/Nextcloud/literatur/bibliographie.bib")
       citar-library-paths '("~/Nextcloud/literatur/files/")
       citar-notes-paths '("~/Nextcloud/literatur/notes/"))
#+end_src
* =packages.el=
#+name: packages
#+begin_src elisp :noweb yes :tangle packages.el
<<org-roam-bibtex-packages>>
#+end_src
